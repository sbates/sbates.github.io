<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bratty Redhead]]></title>
  <link href="http://blog.brattyredhead.com/atom.xml" rel="self"/>
  <link href="http://blog.brattyredhead.com/"/>
  <updated>2012-09-15T15:17:59-05:00</updated>
  <id>http://blog.brattyredhead.com/</id>
  <author>
    <name><![CDATA[Sascha Bates]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Coffee Nerdery: Blue Ox, Minneapolis]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/09/15/coffee-nerdery-blue-ox/"/>
    <updated>2012-09-15T14:53:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/09/15/coffee-nerdery-blue-ox</id>
    <content type="html"><![CDATA[<p><strong><a href="http://blueoxcoffeecompany.com">Blue Ox</a></strong><br/>
<strong>Location</strong>: Chicago and 38th St, South Minneapolis, MN<br/>
<strong>Espresso</strong>: Counter Culture <br/>
<strong>Hardware</strong>: Mazzer and La Marzocco<br/>
<strong>Coffee Art</strong>: Yes<br/>
<strong>Drink</strong>: cappuccino<br/>
<strong>Served in</strong>: 6oz ceramic cups<br/>
<strong>Visited</strong>: 2012 often</p>

<p><img src="http://blog.brattyredhead.com/images/blueox.jpg"></p>

<p>The Blue Ox coffee shop opened up about 3 blocks from my house in 2011.  I love
them. I love that they opened up in what I consider a marginalized area of
Minneapolis, albeit one that people are working to revitalize. I love that
I can walk 3 blocks to get wonderful artisan coffee. Sadly, I&#8217;m super lazy and
often stay home and make my own substandard not-really-artisan coffee instead.</p>

<p>Blue Ox always has local art on the walls. Furnished with several second hand
dinette tables and chairs, they also have a comfy futon and you&#8217;ll often find
the windows open and the ceiling fans running instead of a/c.</p>

<p>Baristas here are always willing to talk the finer points of espresso and
coffee with you.  They have individually brewed coffee, pour over and they&#8217;ll
make you an AeroPress Aerobie coffee if you ask.  I&#8217;ve chatted with them and
I know they calibrate the espresso grind and length of the pull at least every
morning, sometimes more.</p>

<p>They&#8217;ve cycled through a few different brands of coffee and have recently
started serving Counter Culture beans. When paired with the local milk used
here, these produce a lovely, sweet  espresso drink.</p>

<p>Warning, Blue Ox only serves whole milk.  There is no skim or 2% here. They
probably have soy, although I haven&#8217;t asked.  They have locally baked pastries
but no hot food. Today when I came in, they were also offering chips and hummus
or salsa.</p>

<p>When you combine the laid back atmosphere and super yummy coffee combined with
proximity to my house, Blue Ox pretty much wins my &#8220;favorite coffee shop in
Minneapolis&#8221; award.  That&#8217;s not to say there aren&#8217;t other places just as good
and I&#8217;ll be getting to those in future posts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffee Nerdery: Irving Farm, New York]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/09/08/coffee-nerdery-irving-farm/"/>
    <updated>2012-09-08T20:11:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/09/08/coffee-nerdery-irving-farm</id>
    <content type="html"><![CDATA[<p><a href="http://www.irvingfarm.com/index.cfm">Irving Farm Coffee Roasters</a><br/>
<strong>Location</strong>: New York, 14th St &amp; 7th Ave, Uptownish<br/>
<strong>Espresso</strong>: Irving Farms<br/>
<strong>Machines</strong>: La Marzocco &amp; Doge<br/>
<strong>Coffee Art</strong>: yes<br/>
<strong>WiFi</strong>: Unknown<br/>
<strong>Served in</strong>: 8oz ceramic cup<br/>
<strong>Drink</strong>: skim cap<br/>
<strong>Visited</strong>: 9/2/12</p>

<p><img src="http://blog.brattyredhead.com/images/irvingfarm.jpg"/></p>

<p>Verdict: Noms. Seems like a lot of places in NYC are serving Intelligentsia
coffee.  While I don&#8217;t object necessarily, it&#8217;s nice to see a coffee shop using
locally roasted or even better, roasting its own.  My drink was mild and
reminded me a bit of Stumptown with it&#8217;s citric tinge. They heated the milk
a bit more than some places but it was still drinkable and I like my milk with
a smidge of heat so the drink doesn&#8217;t cool off too soon. I&#8217;m guessing they heat
to 145-150.</p>

<p>There are four small tables and a wall bench at this location, so the lounge
factor isn&#8217;t high.  However, the was an elderly man enjoying his newspaper
when I got here and so I&#8217;m guessing foot traffic isn&#8217;t too obnoxious.
The shop is small and unassuming from the outside and I wouldn&#8217;t have noticed
except I got off the subway there and was looking for friends.</p>

<p>Fyi, no public bathroom</p>

<p><strong>Final Word</strong>: Noms.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffee Nerdery: Financier, New York]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/09/08/coffee-nerdery-financier/"/>
    <updated>2012-09-08T19:55:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/09/08/coffee-nerdery-financier</id>
    <content type="html"><![CDATA[<p><a href="http://financierpastries.com/">Financier Coffee</a><br/>
<strong>Location</strong>: New York, Cedar &amp; William, Downtown, Financial District<br/>
<strong>Espresso</strong>: Financier (roasted in Park Slope, Brooklyn)<br/>
<strong>Machine</strong>: La Marzocco &amp; Mazzer<br/>
<strong>Coffee Art</strong>: No<br/>
<strong>WiFi</strong>: kind of (&#8220;It&#8217;s not working right now&#8221;) <br/>
<strong>Served in</strong>: 8oz ceramic cups after I asked twice for &#8220;here&#8221;<br/>
<strong>Drink</strong>: skim cappuccino<br/>
<strong>Visited</strong>: 9/2/2012</p>

<p><img src="http://blog.brattyredhead.com/images/financiercoffee.jpg"></p>

<p>This drink had the potential to taste good.  Unfortunately the
barista had no concept of micro foam or craftsmanship. The taste is a little harsh but I can see
that it could taste awesome if prepared correctly.</p>

<p>Financier prepares and roasts their own beans and so I may come back again and
check as it has the advantage of being close to where I&#8217;m staying and the
subway stations are totally horked with construction this weekend. (n.b.
I didn&#8217;t. I walked to Kaffe 1668 in search of a sure thing).</p>

<p>The pasty case looks amazing but I won&#8217;t be able to report on that. The store
has long bar seating at the window plus some table in the back. While
I prefer the dark hipster coffee shops, this is still ok.  The music is kind
of pop/r&amp;b dreadful. There&#8217;s no public bathroom either btw.</p>

<p>Also, beware, a small cappuccino is really only one shot. They divide the
shots. When I saw that, I asked for the second. This annoyed me.</p>

<p><strong>Pros</strong>: cap tastes good despite mangled prep, bright and airy if you like that,
PASTRIES!<br/>
<strong>Cons</strong>: Inexperienced baristas, Split shots (who are you, Starbucks?), crappy wifi</p>

<p><strong>Final word</strong>: Beats Starbucks and the nearby Blue Spoon</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Isn't This Funny?]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/09/04/why-isnt-this-funny/"/>
    <updated>2012-09-04T23:11:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/09/04/why-isnt-this-funny</id>
    <content type="html"><![CDATA[<p><img src="http://blog.brattyredhead.com/images/cczqi.jpg"/></p>

<p><strong>tl;dr</strong>: As a sysadmin, whenever someone tweets something snarky about sysadmins,
I feel a little put down. As a result, I try to think twice about snarky stuff
I might tweet about devs or other teams. And so, I think sysadmins posting snarky captioned
images about devs and then adding the devops hashtag is mean and
inappropriate.</p>

<p>I&#8217;ve seen this captioned image circulating all day with the devops hashtag on Twitter. For the
record, I don&#8217;t think this picture is funny. In the right context, it might
be funny. If it were, say, a slide in a deck pointing to how things are or
used to be without devops, I&#8217;d laugh. My issue is seeing tweeted with the devops hashtag
and having it billed as funny.</p>

<p>Now I love me some snark. But I think it&#8217;s too easy to be
snarky and mean on Twitter,  because there isn&#8217;t a lot of consequence and we
tend to live within a circle of our peers who often think alike.  The snark
factor often goes up around conference time when many of us are congregating
in once place and competing to sound smart and funny in 140 characters or
less. I&#8217;ve commented before that I think people are too often mean on Twitter
in the name of being witty or complaining about speakers without ever
thinking about what that speaker might feel if he sees that tweet later.</p>

<p>So why does this caption bother me? I have a long history of unfiltered snark
and smart ass remarks. Consulting since 2006 taught me a lot about active
filtering and my introduction to DevOps caused me to implement additional filtering for the
sake of my emotional attachment to an ideal.</p>

<p>As someone who&#8217;s signed on as a big fan of DevOps culture, I spend a lot of
patrolling my cynicism and preventing disparaging remarks from escaping the
filter. I think when you espouse certain ideals, you&#8217;re responsible all the
time for representing them.</p>

<p>I sometimes see cynical, catty remarks about sysadmins or ops from people who
can only have come from a long life of development and, even though I haven&#8217;t
technically done ops in 7 years, I&#8217;ve been sysadminly all my long life and
I am affronted every time by those remarks. Recently I heard a professional dev
say to someone in a beginners programming workshop, &#8220;If you want
to understand/master the install of the programming tools, you&#8217;re probably
better off as a sysadmin not a programmer.&#8221; The guy who said is a super nice
guy, but that remark still got a side-eye from me.</p>

<p>If DevOps is a movement that promotes collaboration, communication, respect
and friendship between functional teams, I don&#8217;t think a sincere proponent
would post this kind of caption. While it makes some folks feel validated,
it&#8217;s just fueling the fire that walls people off from each other.  I don&#8217;t
think we can all get along when folks are throwing up cynical remarks
perpetuating stereotypes of bad development practices.</p>

<p>While there are many successful DevOps teams out there, there are far more
silos in transition or bitter adversaries who haven&#8217;t yet heard of DevOps.
I can&#8217;t believe that only some developers or sysadmins are capable of transcending the usual barriers;
I have to believe that any and all are able to transcend them or what&#8217;s the
point?   But it&#8217;s the more entrenched and cynical cases that will be the most
difficult to move ideologically and emotionally and I feel that humor like
this can only alienate.</p>

<p>I don&#8217;t want to pick on anyone specifically because I see this kind of humor
from all disciplines all the time and it makes me increasingly uncomfortable each
time. If we&#8217;re actually going to all be in this together, we need to jump in
with both feet. So I thought I would speak up for a moment and say something.
If a thing can only be funny by being rude about someone else, maybe it&#8217;s not
actually funny at all.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffee Nerdery: La Colombe]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/09/03/coffee-nerdery-la-colombe/"/>
    <updated>2012-09-03T19:38:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/09/03/coffee-nerdery-la-colombe</id>
    <content type="html"><![CDATA[<p><a href="http://lacolombe.com">La Colombe</a><br/>
<strong>Location</strong>: New York, NoHo@400 Lafayette<br/>
<strong>Espresso</strong>: La Colombe<br/>
<strong>Machines</strong>: La Marzocco &amp; Mazzer<br/>
<strong>Coffee Art</strong>: yes<br/>
<strong>Wifi</strong>: unknown<br/>
<strong>Served in</strong>: 8oz ceramic <br/>
<strong>Drink</strong>: skim cap<br/>
<strong>Visited</strong>: 9/2/12</p>

<p>This was a quick stop while out shopping with a friend. There&#8217;s ample seating
and it&#8217;s a light, airy space. My coffee was ok, although it was a smidge
bitter. I&#8217;d probably have to try again to see how I liked the coffee.
However, it&#8217;s a great place, good for meeting a friend or stopping in and
they take their coffee production pretty seriously. I didn&#8217;t actually see
a menu anywhere although I wasn&#8217;t looking.</p>

<p>They did have an adorable water &#8220;fountain&#8221; that offered room temperature,
cold or carbonated water and they&#8217;ll offer you a water cup no problem.  The
staff is professional and fast. This coffee shop had the most starbucksian
feel to it of all the shops I&#8217;ve been too, but I don&#8217;t really mean that in
a derogatory way. I just mean that they turned out product quickly. The
product they turned out was definitely far superior to anything Starbucks
will serve you. I still prefer low-lit, shabby, hipster joints, but I&#8217;d have
no problem coming back here.</p>

<p><strong>Pros</strong>: Fast, good coffee<br/>
<strong>Cons</strong>: None really</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffee Nerdery: Macchiato, NYC]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/09/03/coffee-nerdery-macchiato/"/>
    <updated>2012-09-03T13:55:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/09/03/coffee-nerdery-macchiato</id>
    <content type="html"><![CDATA[<p><a href="http://www.macchiatocafe.com/">Machiatto</a><br/>
<strong>Location</strong>: near Times Square<br/>
<strong>Espresso</strong>: Macchiatto 44 roasted by Seattle-based Fonte Micro Roasters<br/>
<strong>Hardware</strong>: Fonte branded<br/>
<strong>Coffee Art</strong>: No<br/>
<strong>WiFi</strong>: unknown<br/>
<strong>Served in</strong>: 12oz cardboard cups<br/>
<strong>Drink</strong>: skim cappuccino<br/>
<strong>Visited</strong>: 8/29/2012</p>

<p>Sorry, no picture. This was on the run with friends.</p>

<p>Macchiato is a local two-shop chain in NY. It&#8217;s a restaurant as well as coffee
bar and appears to have a brisk lunch crowd. Seating is small tables and
chairs. This was a spontaneous stop after having lunch with friends near Times
Square. We stood in a long but efficient line. I was alarmed at the amount of
milk they poured in my 12oz drink and thought it would taste more like milk
than coffee.  While I would have preferred less milk, the taste was still
sweet, I could still taste coffee and the micro foam was lovely.  The
temperature of the drink was fine without a sleeve and the taste was nicely
sweet, leading me to suspect they probably use local and/or premium milk.
I prefer my caps with less milk, but if you aren&#8217;t picky about lattes vs caps,
you&#8217;ll probably like it. If I&#8217;d actually ordered a macchiato, it probably would
have been lovely.</p>

<p><strong>Pros</strong>: Fast service, lovely taste, great micro foam<br/>
<strong>Cons</strong>: Busy and lacking in attention to detail.</p>

<p>Final word: I would go here if I were near but wouldn&#8217;t go out of my way to get
some and I might look around for something different if I were planning ahead.
I think 12oz cups are way too big for most drinks, but it did taste good, so
YMMV.  It makes me interested in checking out Fonte Coffee Roasters in Seattle!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffee Nerdery: Blue Spoon]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/09/03/coffee-nerdery-blue-spoon/"/>
    <updated>2012-09-03T09:38:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/09/03/coffee-nerdery-blue-spoon</id>
    <content type="html"><![CDATA[<p><a href="http://www.bluespooncoffee.com/">Blue Spoon</a><br/>
<strong>Location</strong>: New York, Downtown (Williams and Platt)<br/>
<strong>Espresso</strong>: Intelligentsia<br/>
<strong>Hardware</strong>: La Marzocco + Mazzer<br/>
<strong>Coffee Art</strong>: No<br/>
<strong>WiFi</strong>: yes, from the park across the street (NY DTA), sketchy<br/>
<strong>Served In</strong>: 8oz cardboard<br/>
<strong>Drink</strong>: skim cappuccino<br/>
<strong>Visited</strong>: 8/31/2012</p>

<p><img src="http://blog.brattyredhead.com/images/bluespoon.jpg"></p>

<p>This is a small shop at corner of William and Platt in the Financial
District.  The coffee is too hot leading me to guess they overcook the milk. I ate
half a bagel waiting for it to cool off. If I had been walking, I would have
wanted a sleeve, which I generally never need with artisan coffee joints. It
was interesting that the beans were Intelligentsia as the taste seemed to
have a lot more licorice or citrus than the other locations serving the same
beans. Reminded me a bit of Stumptown when it&#8217;s pulled too long.</p>

<p>Other, non-coffee specific: It&#8217;s hot in here. It&#8217;s a very small space and
I think there&#8217;s some a/c near the counter, but I&#8217;m about 8 feet away at
a window bar and sweating while drinking my coffee. Also, despite ordering
&#8220;for here,&#8221; I received cups with lids on them and a bagel toasted but wrapped
up in wax paper and a lunch bag.</p>

<p><strong>Pros</strong>: They&#8217;re 2 blocks from where I&#8217;m staying and bagel noms.<br/>
<strong>Cons</strong>: scalded milk, bitter, citric taste, location heat.</p>

<p>Followup: It was 90 degrees Friday afternoon, so I opted to walk back here
despite the meh experience of the morning.  I got the same kind of drink that
I think had even more milk than my morning cups. Very disappointing
experience for a shop that actually has a La Marzocco in residence.</p>

<p>Final word: Despite the La Marzocco, this shop is not serving artisan coffee
and I don&#8217;t recommend it. It beats Starbucks, but just barely. Intelligentsia
should investigate the crimes being committed against their beans in this location.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffee Nerdery: Kaffe 1668]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/09/02/coffee-nerdery-kaffe-1668/"/>
    <updated>2012-09-02T17:42:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/09/02/coffee-nerdery-kaffe-1668</id>
    <content type="html"><![CDATA[<p><strong><a href="http://kaffe1668.com">Kaffe 1668</a></strong><br/>
<strong>Location:</strong> New York, Tribeca a few blocks from the GZ Memorial<br/>
<strong>Espresso:</strong> Intelligentsia <br/>
<strong>Hardware:</strong> Synesso &amp; Mazzer<br/>
<strong>Coffee Art:</strong> Yes<br/>
<strong>WiFi:</strong> yes<br/>
<strong>Drink:</strong> skim cappuccino<br/>
<strong>Served in:</strong> 6oz ceramic cups<br/>
<strong>Visited:</strong> 2012 Aug30, Sep1 &amp; 3</p>

<p>  <img src="http://blog.brattyredhead.com/images/kaffe1668.jpg"/><br/>
 This coffee shop was recommended to me by a casual Facebook friend who moved to NYC
 from Minneapolis and used to be a barista himself.</p>

<p> Kaffe 1668 is a lovely little shop with dark wood tables and benches. It&#8217;s
 quite dim inside and I really like it. They serve espresso drinks and
 individually brewed coffee.  My cappuccinos were low temperature and actually
 cooled rather quickly as I was lollygagging.  However, they were very good and
 I enjoyed every drop. In a world where too many drinks are made with scalded
 milk, I&#8217;m ok with the consequences of low temps. The shop has cold pastries.
 I had a scone on my first visit and a breakfast sandwich on a baguette on the
 next. The scone was good, the baguette was chewy(I know nothing about french
breads so take that fwiw).</p>

<p> Your wait for coffee can be significant. The line moved a bit slow and it
 took a while for my drinks to be made.  However, it&#8217;s worth it as the
 baristas are perfectionists and won&#8217;t serve a substandard drink. On my first
 visit I was informed that my second cup was late because they were remaking
 it.   I understand they recalibrate espresso pulls throughout the day here
 which is awesome.</p>

<p> One thing worth mentioning is that it seems to be a stroller destination on
 Saturday mornings. It&#8217;s still worth it for good coffee which seems to be
 missing in most of Downtown, but cranky babies can be a bit tough on the ears
 in the early morning.</p>

<p> Bonus: They&#8217;re open on Labor Day. Guess where I&#8217;m going when I get up
 tomorrow?</p>

<p> <img src="http://blog.brattyredhead.com/images/kaffe1668-2.jpg"/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffee for Traveling Nerds]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/09/01/coffee-for-traveling-nerds/"/>
    <updated>2012-09-01T09:01:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/09/01/coffee-for-traveling-nerds</id>
    <content type="html"><![CDATA[<p>I&#8217;m embarking on something I&#8217;ve wanted to do for a long time. Coffee reviews
for traveling nerds. I don&#8217;t travel extensively but I do go places and my trip
logistics are often driven by my need for acceptable espresso drinks. Over the
years I&#8217;ve raised the bar several times for what I want in a coffee shop. I used to just get excited that
I could find Starbucks on road trips through Nebraska and Oklahoma or had
a Starbucks across the street from my hotel.</p>

<!-- more -->


<p>These days I look a little harder for local shops serving artisan espresso
drinks. I have been know to pore over Google Maps and search the internet for
hours before choosing a hotel for a trip. For road trips I look ahead of time
at where we might be able to stop for coffee, mostly because I&#8217;m afraid we&#8217;ll
miss the only coffee shop within 300 miles (this can happen in Texas!).</p>

<p>I&#8217;m not a top of the line coffee snob. I don&#8217;t attend cuppings and I&#8217;m not sure
I could tell the diff between espresso shots. To be honest, I&#8217;m not too fond of
straight espresso. I prefer my drinks to be about cappuccino strength. I don&#8217;t
roast my own beans although I&#8217;ve met those who have. I can&#8217;t make very good
coffee art, although I enjoy trying.</p>

<p>I drink most of my espresso at home, which is part of what&#8217;s raised the
bar when I look for coffee shops. If you spend a lot of time pursuing a great
shot, you start noticing when you&#8217;re served bitter espresso or scalded milk. I went from religiously drinking
Caribou cappuccinos to actively loathing them over a period of a few years.</p>

<p>Many years ago I had a Krups pot boiler espresso machine and a blade grinder.
I used that for years and considered it fine. Then I started thinking I wanted
a nicer espresso maker and started reading.  That&#8217;s when I learned about
grinders. Instead of buying a new espresso machine, I ended up buying a <a href="http://www.mazzer.com/scheda.asp?idprod=2">Mazzer
Mini</a>. This was before the Euro and when things were less expensive. I believe
it cost me around $350 at the time. That was all the money I could afford to
spend for a long time, so I had a super nice grinder and a crappy pot boiler
espresso machine.</p>

<p>Eventually my boyfriend and I each got Starbucks Barista machines on sale for
$200 and they were great for their price point until they died. At that point,
I was making more money and decided I wanted something nicer. I opted for
a <a href="http://www.rancilio.it/rancilio/prod_model.jsp?id_model=49&amp;id_language=3&amp;id_category=26">Rancilio Silivia</a>
which I later modded with a <a href="http://www.pidsilvia.com/">PID</a> that allows you to see and
regulate the brewing temperature for espresso.  This is where I&#8217;m at today:
Mazzer Mini, Rancilio Sivia. I tend to use the same espresso beans as
calibrating the grinder for different kinds requires wasting about half a pound
and too much time.  So I stick with a local provider: <a href="http://www.peacecoffee.com/">Peace Coffee
espresso beans</a>.
What do I consider an artisan shop? There are several optional
components but a few obvious things:</p>

<ul>
<li><strong>Their espresso machine aren&#8217;t automatic</strong>:
If you push a button to make the espresso, chances are good it&#8217;s going to taste
like ass, no matter how beautifully the beans were roasted. Example: I ended up
at a Pete&#8217;s Coffee in Santa Clara and was surprised at how downright yummy my
latte tasted. This shop was using a La Marzocco. I was so pleased that when
I went to the airport, I ordered some there.  The same drink came out of an
automated machine and was so vile I threw it out.  Seriously.  So this one
isn&#8217;t negotiable. You can&#8217;t have an automatic and call yourself artisan. Please
point me in the direction of anyone making sublime drinks with an automatic if
you disagree.</li>
<li><strong>Beans are ground for each drink, not hours in advance</strong>:
Yes this really happens. I have stopped at a few places and had them make
espresso with grounds from a bin.</li>
<li><strong>Coffee Art</strong>:
I consider this mandatory although not necessarily every single time if I go
often. What this tells a first time visitor though is that your baristas have
been trained on more than how to look at a theromometer and push a button. It
also adds a nice finishing touch to the drink, communicating that each drink is
an individual effort.</li>
</ul>


<p>Less mandatory, I like it when the barista can talk about calibration and taste
notes with their espresso(s). Another thing you&#8217;ll find in serious artisan
shops is milk snobbery.  When the Angry Catfish opened in Minneapolis, they did
several taste tests before settling on a local milk provider. They also only
serve whole milk, no arguments, although they&#8217;ll also use soy.</p>

<p>So anyway, I&#8217;ve started writing up my NYC coffee shop experiences and will post
a separate snippet for each shop. I&#8217;ll also create entries for places like that
awesome shop we found in Denton, TX and other recent trips to Baltimore,
Seattle and Santa Clara. I know this is
a technical blog, but coffee is so much a part of our lifestyles that it seems
a natural add-on. I hope you enjoy it and if you have suggestions for places
for me to visit, please let me know.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Epic ATG Cheffing]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/08/11/epic-atg-cheffing/"/>
    <updated>2012-08-11T08:47:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/08/11/epic-atg-cheffing</id>
    <content type="html"><![CDATA[<p>I just want to take a moment to point you at an epic new Chef cookbook undertaking. John Larsen has been working on a <a href="http://community.opscode.com/cookbooks/atg">cookbook to configure a full ATG stack with JBoss</a> and has finished a first version. This is something I always wanted to work on but never got around to, and so I&#8217;m being extra appreciative of someone who did take the time to get it working.</p>

<!-- more -->


<p>Anyone who works on ATG projects knows that installing and configuring the
first instances of ATG is hella complex and nearly impossible to do even with
documentation.  With all the options, variables and components, it mostly takes repetition and mistakes to get an initial ATG install correct.</p>

<p>That&#8217;s <strong>not</strong> what this cookbook is about. You still have to know how to get ATG
right the first time or have someone on your team who does. This cookbook is
not going to make you an ATG expert, but it will relieve the tedium of
managing your configurations. It will also speed up adding a new instance. The more epic your configs, the more awesome this
cookbook will be for you.</p>

<p>The cookbook contains a modified version of <a href="http://community.opscode.com/cookbooks/jboss">Bryan Berry&#8217;s JBoss Cookbook</a>, specialized for ATG deployment and does the following cool things:</p>

<ul>
<li>Configures single or multiple instances of JBoss on a server</li>
<li>Provides flexibility to determine where you will setup your lock management,
global, process and workflow managers.</li>
<li>Configures port management for ATG legacy ports</li>
<li>Has templates for all the major ATG property files, like
Configuration.properties, Lock Manager, scenario manager and  workflow process manager</li>
<li>Has templates for major jboss/atg configs like atg-ds.xml, bindings, log4j,
run.conf, etc</li>
<li>Definitions for configuration sets (lock, staging, store&#8230;)</li>
</ul>


<p>The ATG cookbook is well thought out, fairly large and handles complex scenarios. If you are in
the position of having to manage or build an ATG environment, I definitely
encourage you to check it out.  With something like this, it would even be
possible to stealth manage your configs with Chef-solo early on if you&#8217;re looking to prove out
configuration management for ATG-JBoss. In my experience, there&#8217;s something about
shops running this combo that makes them, in general, resistant to
configuration management. Possibly it&#8217;s the breakneck speed at which I see them
running (often with scissors).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Attributes Origami]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/07/28/attributes-origami/"/>
    <updated>2012-07-28T23:00:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/07/28/attributes-origami</id>
    <content type="html"><![CDATA[<p>This post has been percolating in my brain for a long time. I mean like, long. Ever since I <a href="http://wiki.opscode.com/display/chef/Cookbook+Style-Guide+Outline">read a snippet</a> from last year&#8217;s Chef Summit discussing best practices regarding attributes, I&#8217;ve wanted to write something. But what I&#8217;ve got to say keeps changing.</p>

<p>This post assumes some basic familiarity with Chef and node attributes. I assume that most people are going to be bored with the subject matter unless you care about nerdy details or why strings are the official preferred notation. You can get the <a href="http://wiki.opscode.com/display/chef/Cookbook+Attributes#CookbookAttributes-Notation">short version</a> on the Chef Wiki Cookbook Attributes page. I have a longer discussion here that focuses on my discovery process and evolution of thought.</p>

<h4>A Quick Attribute Notation Overview</h4>

<p>When I first started working with Chef, the publicly available cookbooks and wiki documentation were written in different styles.</p>

<ul>
<li>Some used <strong>symbols</strong>: node[:some][:symbol]</li>
<li>some used <strong>strings</strong>: node[&#8216;some&#8217;][&#8216;string&#8217;]</li>
<li>some used <strong>method_missing</strong>: node.dot.notation</li>
</ul>


<p>I usually refer to this last as &#8220;dot notation,&#8221; mostly because I had no idea what else to call it at first. I still call it that as it&#8217;s an intuitive reference for someone who doesn&#8217;t know much Ruby. I read up on <a href="http://ruby-doc.org/docs/ProgrammingRuby/html/ref_c_object.html#Object.method_missing">method_missing</a> in prep for this blog post, but it was a new term and concept to me.</p>

<h4>O dot notation, how do I love thee?</h4>

<p>Getting back to it, I <em>lurved</em> my dot notation. It was easy to type. It was easy to read. It was harder to make typos. I am the queen of typos. Anything that helps me make fewer is my favorite friend. Then Chef Summit happened and recaps happened and I was like:</p>

<p><img src="images/yutakeawaymaidots.jpg" float: left /></p>

<p>At first I was outraged that they were <em>oppressing</em> my dot notation and I was terrified they would deprecate it, which would make me sad. For a long time after that, I was just mad and still loved my dot notation and resolved to just keep using it anyway. This was the first time I had the urge to blog about it. I was planning to tell everyone to piss off. I loved my dot notation and I didn&#8217;t want it taken away.</p>

<p><img src="images/nocanheerz.jpg" float: right /></p>

<p>I mean, yeah, dot notation didn&#8217;t always work and I probably never understood why. I was like this when I first learned chef:</p>

<p><img src="images/babylol.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning to Let Go (or how I stopped worrying and learned to love the bomb)]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/07/11/learning-to-let-go/"/>
    <updated>2012-07-11T15:54:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/07/11/learning-to-let-go</id>
    <content type="html"><![CDATA[<p>Today I was having a conversation about consulting and how important it is to
not be emotionally attached to your solutions. As a consultant, you exist to be
an enabler. You help others succeed with tasks that, without your expertise, they
might fail instead.  As consultants, our value comes from a long history of
observing and participating in spectacular failures and fantastic
successes. We know what works and what doesn&#8217;t work and we can articulate the
reasons why.  But our value can be compromised if we can&#8217;t interact effectively
with our clients. This means checking your emotions and inner schadenfreude at
the door and working with clients to discover a solution that is practical for
their environment.</p>

<h5>BOFH</h5>

<p>Back in the day, I worked on a silo&#8217;d web operations team at a big retail
company. We knew how we liked things done and, although we might argue amongst
ourselves, we presented a united bullying front to the dev teams.  For example,
  we didn&#8217;t allow them to deploy apps into production when they came with the
  caveat of &#8220;you have to restart the app every night.&#8221; We drank developer tears
  with breakfast, and we liked it that way.</p>

<p>  Guess what? Consultants don&#8217;t have that luxury. I might also argue that
  internal operations teams no longer have that luxury, but that&#8217;s a blog for
  another day.
  <!-- more --></p>

<p>  In that job, I saw every kind of connection leak, OOM and spectacular
  cascading infrastructure disaster you can think of and I participated in
  resolving several.  Eventually I moved on to consulting for a large company
  where I designed and deployed infrastructure for large web-based
  applications. My previous experience was not just invaluable for designing
  infrastructure in diverse environments, It also enabled me to advise client
  development teams on how to write robust applications and assist them in
  tracking down performance problems during the development process.  I was
  full of ideas! They were all brilliant! Wait, what!? Where is everyone going?
  How can you not like my ideas?</p>

<h5>Keep your WTFs to yourself</h5>

<p>  As a new consultant, I had excellent technical knowledge, some decent
  communication skills, and a host of opinions.  I knew the right way to get
  things done and people should listen to me because <em>I was the consultant</em>.
  But technical knowledge and opinions can only take you so far. Some people
  aren&#8217;t suited to life with clients. Often there is no one to shield you from
  difficult people they way your manager would in a normal job. You need to
  work with all types of personalities, while maintaining a calm demeanor. You
  need to be able to not take things personally. You must be capable of
  articulating the why&#8217;s behind your ideas and speak objectively about ideas
  from the client, even if you think it&#8217;s the worst idea since Greedo shooting
  first.</p>

<p>  You can&#8217;t say things like, &#8220;That&#8217;s the dumbest thing I&#8217;ve ever heard,&#8221; or
  &#8220;Why in god&#8217;s name would you ever do that?&#8221;  A favorite that I had to give up
  was, &#8220;Why do you want to make me cry?&#8221;</p>

<h5>Don&#8217;t Get Attached</h5>

<p>   A concept that challenged me is that there is no absolute right or wrong way
  to design something. The corollary to that is you will always disagree with at least
  one thing the client wants to do. Sometimes you will disagree with many.
  Sometimes they will disagree with your solutions and expect you to implement
  what they want, not what you want.</p>

<p>  Well, WTF? You think to yourself, how am I supposed to do that? Newsflash:
  You need to figure it out because that&#8217;s why you get paid the big bucks. As
  an independent consultant now, I have some leeway to do my due diligence and
  decline projects that look risky or are implementing tech stacks of which
  I don&#8217;t approve. As an employee for a consulting company, I went where they
  pointed me and I liked it. And I figured it out, because they paid me
  a boatload of money to use my brain.</p>

<p>  Something you will hear often as a consultant: &#8220;That&#8217;s a great idea, but
  we&#8217;re not going to it.&#8221; A client once decided to implement mission critical
  queuing on WebSphere Application Server&#8217;s internal message bus. I could and
  did explain that this solution was not robust until I was blue in the face,
  but the fact is, WebSphere MQ software is expensive and open source wasn&#8217;t an
  option(because). <em>Retail order fulfillment queuing</em> was implemented where
  they wanted it and I spent my days and nights reading up on how to ensure as
  little data loss (orders, right?!) as possible if the unclustered,
  non-redundant server went down. As an aside, I should note that this client
  has since gone out of business.</p>

<p>  You can&#8217;t be emotionally attached to your ideas. I know you think you have
  the one true path to success.  You don&#8217;t. Regardless of how smart you are,
  the customer knows their systems better and they know their politics better.
  They know what can be accomplished.  Get used to having your ideas shot down
  and don&#8217;t let it upset you. Don&#8217;t hang on to them.  You need to get over it
  and move on. If you&#8217;re still hanging on to today&#8217;s disagreements tomorrow,
  you won&#8217;t be able to think clearly tomorrow about new technical challenges.</p>

<h5>Pick Your Battles</h5>

<p>  Sometimes you&#8217;ll encounter strong opposing opinions. If you&#8217;re an IT
  consultant, it&#8217;s guaranteed. Remember, 95% of battles do not need to be
  fought. Just because you don&#8217;t approve of a naming convention is no reason to
  argue, especially if another engineer is in love with it.  You might
  implement applications that need nightly rolling restarts, even if you could
  prove they don&#8217;t need it, just because management has been burned in the
  past. Don&#8217;t fight it. Nightly restarts aren&#8217;t the end of the world.  You
  might meet a team who wants to migrate all of their bash scripts verbatim
  into configuration management. This would be a hard one for me to let go, and
  I might try to convince people not to do it, but I would concede in the end,
  because <strong>refactoring exists</strong>.</p>

<p>  Save up your argues for when it matters. Eventually you will come upon
  something you absolutely won&#8217;t want to compromise. If you haven&#8217;t been
  arguing about everything up to this point, it&#8217;s likely people will actually
  listen when you bring it up.</p>

<p>  Your job isn&#8217;t to say no.  It&#8217;s to say yes.  If your first inclination is to
  dismiss an idea or say no, stop and think about why. Do you have valid
  concerns? What is a valid concern? A valid concern might be a high
  availability requirement with only one database server in the plan.  That&#8217;s
  a problem. But you still don&#8217;t get to say no. That&#8217;s not your job.  Instead
  you should point out the very obvious risk involved in zero redundancy.
  Several years ago, I was presented with a client&#8217;s server plan that I knew
  would never survive the first engagement. In this case, we knew they were
  trying to save as much money as possible, so the consulting team got together
  in a room and came up with a perfect world scenario and then two less
  expensive alternatives that allowed for some robustness while saving on
  hardware expenses. I then power pointed the entire thing and presented to
  senior management. I had been consulting for all of 3 months at the time and
  was petrified but we won them over to one of our solutions in the end.</p>

<h5>This isn&#8217;t relevant to me, I&#8217;m a full time employee</h5>

<p>  Are you on an ops team? Do you work with development teams to get apps into
  production? How about a monitoring team? Do you work with devs to create
  coherent actionable alerts? Then you are a consultant. Developers care about
  one thing: writing code. Some developers do care about more and have the
  background to be interested in more, but in general, especially in big
  companies or outsourced development, all devs care about is writing code.
  They don&#8217;t know how anything else works. It doesn&#8217;t make them dumb, it makes
  them part of a world of which you only see a part.</p>

<p>  This makes you their enabler and a consultant. You have knowledge critical to
  their success. It&#8217;s not just your job to provide them with an app container
  and now buzz off.  You&#8217;re their lifeline to the rest of the infrastructure.
  Telling them &#8220;no&#8221; or ridiculing an idea will only make them angry and
  determined to circumvent all the sane safeguards you&#8217;ve put into place for
  everyone&#8217;s good.</p>

<p>  Instead of treating development teams like they know nothing, take a moment
  to find out why they want to do what they&#8217;re doing.  Many times you&#8217;ll find
  that they&#8217;ve actually just spent two solid days trying to solve a prickly
  problem and this is the only working viable option they&#8217;ve found. Maybe your
  perspective will help you advise them on a better way, or they could be right
  and you could be stuck with something suboptimal. At this point, instead of
  being grumpy about it, start figuring out ways to limit the damage or make it
  more robust and work with your dev instead of against him.  Full time
  employees, I&#8217;m talking to you.</p>

<p>  Consulting isn&#8217;t for everyone. If you can&#8217;t learn to take deep breaths and
  count to ten, it might not be for you. I still make mistakes and have often
  been grateful for working remote where I can wear my rage face in private.
  In the end, you have to be able to let it all roll over you. This isn&#8217;t your
  infrastructure and sometimes compromises must be made.</p>

<p>  For me, consulting is emotionally easier in some ways because I can accept
  decisions with which I don&#8217;t necessarily agree, knowing that I won&#8217;t be
  around to see the heartache in a year. All I can do is my best with whatever
  is under my control. And my best is impressive. I am a master tweaker and
  I document the hell out of ALL THE THINGS.  But I often see sacrifices of
  stability for expediency and it does hurt me.  I&#8217;ve just learned to not let
  it hurt too much. The great thing about consulting is, if this project
  didn&#8217;t work out exactly the way you wished, the next one is right around the
  corner, waiting for you bring it all your awesomeness.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Favorite JVM Arg EVER]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/04/27/my-favorite-jvm-arg-ever/"/>
    <updated>2012-04-27T00:00:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/04/27/my-favorite-jvm-arg-ever</id>
    <content type="html"><![CDATA[<p>This is partially a post for posterity because I can never remember the format of this when I want it and I have to search all over the Internets for it.&nbsp; And for some reason, it&#8217;s really hard to find with keywords.&nbsp; Possibly my google-fu sucks, but I actually think it&#8217;s a java developer conspiracy.</p>
<p>The first time I found this jvm arg, it was by accident.&nbsp; I was reading a page of comprehensive JVM args.&nbsp; No it wasn&#8217;t for fun, although I was enjoying it.&nbsp; I was on a gig to help a client get rid of 20 second garbage collections that were crashing their site.&nbsp; So I was reading through the page just to see what might be useful and I found this:</p>
<p><span style="font-size: medium;"><strong>-XX:MaxJavaStackTraceDepth=&lt;num&gt;</strong></span></p>
<p>It was love at first sight.&nbsp; See, I know developers lurve their stack traces and exceptions.&nbsp; Truly.&nbsp; But I&#8217;ve met some truly horrendous apps.&nbsp; You know the kind.&nbsp; They throw 500 line stack traces every time someone types in a bad password. Or you have an overrun team that, once an app is in production, they don&#8217;t have time to tune the app and so you are stuck with 2000 lines of stack trace for every exception, even though it only takes &lt; 10 to figure out where to look for trouble.</p>
<p>After I found this and used it, I had bookmarked the page of wonderful jvm options, but it was dead the next time I went there. So I ended up searching the internet for it later and found that my googling led me all over.&nbsp; I found a stackoverflow discussion where a harried admin was asking about it and a herd of VERY ANGRY developers jumped all over him saying things like</p>
<p>&#8220;How dare you truncate our wonderful stack traces!&#8221;, and</p>
<p>&#8220;An exception is called that because it&#8217;s <em>exceptional</em>. There&#8217;s a reason for it and you shouldn&#8217;t truncate it!&#8221;&nbsp;</p>
<p>Oh they were like an angry mob.</p>
<p>But I have to tell you, this arg is an admin&#8217;s best friend if you have apps in your care that can&#8217;t be bothered with proper tuning on the dev side.&nbsp; Often this was because a client had a contract dev team come in, deliver an app and then leave.&nbsp; There was no one to fix it.</p>
<p>There&#8217;s no shame in cleaning up your log files so they are readable.&nbsp; It&#8217;s tough to actually dig into a problem if you have thousands of lines of &#8220;benign&#8221; errors filling your world.&nbsp; This option allows you to limit the damage done by excessive logging while still seeing that an exception is being generated. Of course, with all the wonderful logging packages and tools with filters out there today, this sort of thing is less important if you are filtering, but there are lots of admins out there with nothing but the CLI, syslog and vi even today. This post is dedicated to them.</p>
<p>&nbsp;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Alien Technology Tuning Challenge]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/04/26/the-alien-technology-tuning-challenge/"/>
    <updated>2012-04-26T00:00:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/04/26/the-alien-technology-tuning-challenge</id>
    <content type="html"><![CDATA[<p>A friend challenged me tonight to write a brilliant blog post on tuning a technology about which I know nothing. Actually I don&rsquo;t think you can really do that. I don&rsquo;t think you can write a brilliant blog post unless you&rsquo;ve participated in some kind of failure/stress activity with a product.&nbsp; <p />Until you&rsquo;ve seen real life interact with your infrastructure, it&rsquo;s all just theories and beer.&nbsp; But after a long day debugging Chef code I wrote in a way I wish I&rsquo;d never written (no really, I don&rsquo;t want my name anywhere on some of this stuff!), I thought I&rsquo;d take a little downtime to read about a product I&rsquo;m utterly clueless about.&nbsp; Because that&#8217;s fun.&nbsp; YES IT IS.<!-- more --><p />How clueless? After he challenged me, I opted to get in a bike ride while the weather was nice (rumor predicts snow this weekend). While pondering things on my bike, I finally stopped for a sec, took out my phone and googled &#8216;Redis Rescue Throughput.&#8217;&nbsp; And when I found nothing at all useful, I sent him a text &ldquo;Did you actually use the words &#8216;rescue throughput&#8217; earlier?&rdquo;<p />Can you guess what he said to me? He said, &ldquo;Go write a brilliant blog post on Optimizing Redis for Resque Throughput.&rdquo;&nbsp; Now you know how much I know about <a href="https://github.com/defunkt/resque" title="resque" target="_blank">Resque</a>.&nbsp; That would be a big, embarrassing ZERO.&nbsp; As for Redis, I know it&#8217;s an in-memory data store.&nbsp; That&#8217;s it.<p />So now it might not surprise anyone who knows me that this evening did not turn into a big brainstorming session for Redis tuning params.&nbsp; Once I tracked down the Resque github page I was all</p>
<p>&nbsp;</p>
<p><img src="http://blog.brattyredhead.com/images/allthethings.jpg"</img></p>
<p>And it&rsquo;s written in Ruby. This is kind of dorky of me, but I still get a little thrill whenever I read source code and know what&rsquo;s going. I looked at some of the examples and thought, OH HEY, I see what you did there! Not that I&rsquo;m any kind of a genius. But it&rsquo;s fun to realize I can read it.<p />And so then I spent the evening reading about Resque, looking at the source code and reading blog posts about it.&nbsp; I adore queuing software. I love the idea that we can pop little bits of data into a store and have it consumed asynchronously, without having other processes blocked while waiting for something to complete. It always makes me happy to have asynchronicity in place.<p />This of course is mostly from years of supporting projects in the early years where devs didn&rsquo;t understand or know about asynchronous communication. Lots of our problems back in the day were related to synchronous calls blocking until the app crashed.&nbsp; Good times.<p />When I encounter open source queuing applications, I get a warm fuzzy.&nbsp; I grew up professionally in a world that only acknowledged one queuing tool: IBM MQ. IBM built an enormous industry around high availability messaging and I had no idea there were other, easy-to-use tools available in the wild, until I got involved with open source.&nbsp; When I first came across RabbitMQ I was enchanted just because it was the first free, easy to use queuing tool I met; when I come from a world where so many are led to believe that you should pay millions of dollars for a decent, reliable tool.</p>
<p>Then I remembered! o craps! I&rsquo;m supposed to be thinking about in memory database optimization for this queuing stuff, NOT reading about the queuing!&nbsp; Unfortunately, it&rsquo;s now late and I have to get up early tomorrow, so I guess I lose the alien tuning challenge. But I can leave you with common sense and thoughts based on what I see in the redis.conf.<p />Tuning your in memory data store for performance throughput:<p /></p>
<p><span style="font-size: medium;"><strong>Don&rsquo;t be stupid. </strong></span></p>
<ul>
<li>Read the config options.&nbsp; Am I the only one who loves reading config files? Probably. </li>
<li>Also read the <a href="http://redis.io/topics/virtual-memory" title="Redis VM" target="_blank">Redis page on virtual memory</a>.&nbsp; </li>
<li>Dedicate instances to your queuing activities.&nbsp; Don&rsquo;t cause data with disparate requirements to co-exist. Competing data sets could also cause developer hair pulling fights over whose app is breaking things.</li>
</ul>
<p><span style="font-size: medium;"><strong>Disk I/O and resource contention</strong></span></p>
<ul>
<li>Avoid frequent disk writes, esp if you have multiple instances, because you risk I/O contention</li>
<li>Avoid excessive logging for the same reason</li>
<li>Avoid virtual machines </li>
<li><a href="http://www.youtube.com/watch?v=H7PJ1oeEyGg" target="_blank">Get a fucking ssd?</a> Maybe not if you avoid needing to write to disk much, since we&#8217;re more concerned with ALL THE RAMS.</li>
<li>Know how much memory you will need and MONITOR usage and trending BEFORE you use it all up.</li>
<li>Your data lives in a Memory-based container.&nbsp; Understand the Max Memory policy</li>
</ul>
<p><span style="font-size: medium;"><strong>Connections</strong></span></p>
<ul>
<li>Manage your max clients - just because it defaults to 10,000 doesn&rsquo;t make it right.</li>
<li>Ensure you have enough file descriptors for all your connections plus whatever else the DB needs to keep functioning.&nbsp; If you limit your max connections, you can probably leave the FD unlimited. Or you can limit your FDs as it looks like Redis is smart enough to use those to set connections.</li>
<li><span style="color: #ff0000;">Either way - be aware of the relationship between number of potential clients connecting, max file descriptors and max client connections.&nbsp; Or you will be sad.</span></li>
<li>Connection timeouts - this is a tricky topic. If your data store is separated from your queue manager by a firewall, you probably can&rsquo;t leave it on infinite. Firewalls will timeout your connection and not tell you about it. This will either confuse the queue manager and cause it to error or it will possibly be smart enough to open a new connection.</li>
</ul>
<p>&nbsp;&nbsp;&nbsp;&nbsp; If the latter, you will eventually run out of file descriptors or allowed connections on the data store side unless the data store is also smart.</p>
<p><span style="font-size: medium;"><strong>Redis</strong> </span>(did I mention I know nothing about Redis? It&#8217;s an in-memory data store, right?) I read the redis.conf and skimmed the Virtual Memory page.</p>
<ul>
<li>Disable active rehashing </li>
<li>Understand your VM options</li>
<li>Understand your typical message sizes and size your paging accordingly</li>
</ul>
<p>That&#8217;s all I got. You should verify anything you read here against your own requirements and get a second opinion.&nbsp; Every situation is unique. All of these relate to production environments and could be specific to a low latency goal. Memory conservation and data criticality may be conflicting priorities or require compromise.&nbsp;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yak Hacking - A Story]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/04/15/yak-hacking/"/>
    <updated>2012-04-15T00:00:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/04/15/yak-hacking</id>
    <content type="html"><![CDATA[<p>I have a couple of half-written blog posts started this weekend.&nbsp;  Real wordy things about scrummifying your infrastructure and my  experience with it.&nbsp; I&#8217;ll probably get to that in a few days but I  needed to vent about my weekend of yak shaving first.</p>
<p><strong>Moral of my story:</strong> The story you&#8217;re about to read is not the worst yak shave ever, and the problem is not a <em>hard</em> problem.&nbsp; It&#8217;s all in a day&#8217;s work for any halfway decent sysadmin.&nbsp; What we&#8217;re seeing here is a small problem exacerbated by a combination of <strong>technical debt </strong>and<strong> inadequate tooling.</strong></p>
<p>Technical debt is a choice and can happen to anyone.&nbsp; Here the client allowed their configuration management to run away from them.&nbsp; They haven&#8217;t been maintaining their Puppet nodes and so don&#8217;t have a good list of what servers they are managing.&nbsp; They also let some config files slip through unmanaged.&nbsp; I generally don&#8217;t point fingers about it as there&#8217;s usually a sane tradeoff involved, but the first issue makes fixing the second one harder.</p>
<p>However, inadequate tooling does frustrate me.&nbsp; They&#8217;ve gone to the trouble of automating with Puppet and managing application configs with subversion and scripting, but do not seem to have considered holistic server management. The only way to perform administrative tasks is by hand on each server or with Puppet. This seems a rather gaping hole in long term planning.&nbsp; 100 servers is long past what I consider manageable by hand.&nbsp; But you read the story and decide for yourself.</p><!-- more -->
<p><strong>Situation</strong><br />An org uses Puppet. The org has files unmanaged by Puppet that need to be gathered, analyzed and brought under Puppet control. I expected this to take a couple of hours.</p>
<p><strong>What made it challenging:</strong> <br />Actual list of servers, uncertain. Generated from Puppet but unverified.<p />The files are secured from being read by anyone except root. 600 as it were.<p />There  are no other management tools - no Rundeck, no Func, no Ansible, no  Salt, no Knife, not even a home grown, lovingly maintained perl  management script, no passwordless ssh.<p />The client apparently expects admins to log into boxes one by one for administrative activities.</p>
<p><strong>What I have:<br /></strong>My user ID.&nbsp; <br />Sudo on any server I can log into. <br />Passwordless SSH works even if it&#8217;s considered insecure.&nbsp; (really?)<br /><a href="http://sourceforge.net/projects/sshpass/" title="SSHPass" target="_blank">SSHPass</a><br /><a href="http://code.google.com/p/sshsudo/" title="sshsudo" target="_blank">SSHSudo</a><br />Ruby 1.8.5 installed from RPM</p>
<p>With  the thought of using sshsudo, I wrote a <a href="https://github.com/sbates/scripts/blob/master/getfiles.rb" title="ruby script" target="_blank">ruby script</a> that runs on  the client node, checks for file existence, copies the files to a temp  folder, makes them available for scp and even tries to scp them back to  the admin server.&nbsp; The script should be runnable via sshsudo/sshpass.&nbsp;  BUT&#8230;<p />The servers also do not allow sudo without a tty. SSH -t  doesn&#8217;t work.&nbsp; SSH -t -t kind of works but hangs without the occasional  keyboard intervention. Trying to scp from the script invokes another request for password which can&#8217;t be handled discreetly on the client.<p />SSHpass works but can&#8217;t execute anything  with sudo on the other end because of the secure tty issue.&nbsp; So this  doesn&#8217;t do me any good because all the files are root-readable only.<p />SSHSudo works but suffers from similar issues.<p />The  servers are RH5 running puppet installed with RPMs so no rubygem  installs exist, even if I were rude enough to install things on servers  belonging to someone else. I had been looking at the use of net-ssh/scp  for some of my scripting, but it wasn&#8217;t really useful.<p /><em>Did any of that make sense?</em><p />None  of this addresses the pre-work I did either.&nbsp; I was given a list of 200  or so servers (generated from Puppet I believe). with the caveat that  &#8220;some may have been retired.&#8221;&nbsp; So I wrote a <a href="https://github.com/sbates/scripts/blob/master/connection_test.rb" title="tcp test script" target="_blank">tcp script </a>to check  listening sockets on port 22 and a few others if desired.&nbsp; I then sorted my servers  into ones that responded, ones that timed out and ones that issued a  &#8216;name or service not known&#8217; message and consulted with the client&#8217;s full  time sysadmin. It turns out that the ones in DNS but not responding  were retired and the ones with connection timeouts needed to be reached  from another server. omg.<p /><strong>What I finally did:</strong><br />Several unscripted actions on the command line because I was doing them as troubleshooting/discovery  steps while figuring out wtf to do to get the files I needed.</p>
<p><strong>Assembled a servers.good list based on the tcp testing.</strong><p /><strong>Updated the sshsudo script to -t -t wherever it ssh&#8217;d</strong> (oi!)<br /><strong></strong><br /><strong>make a local dir for the files, separated by host name: </strong><br />for i in `cat servers.good`<br />&nbsp; do echo $i<br />&nbsp; mkdir -p /tmp/sascha/files/$i<br />done<p /><strong>Put  the file manipulation script down on all the servers and run it;</strong> originally it was going to scp them back to the admin server too, but  that wasn&#8217;t working out for me<br />./sshsudo -r -v -u sascha servers.good getfiles.rb <p /><strong>Get the files I snagged out of their root-read-only existence </strong><br />for i in `cat servers.good`<br />&nbsp; do echo $i<br />&nbsp;sshpass -f ~/mypassfile scp -q sascha@$i:/tmp/files/* /tmp/sascha/files/$i<br />done<p /><strong>Delete the files from remote tmp</strong><br />for i in `cat servers.good`<br />&nbsp; do echo $i<br />&nbsp; sshpass -f ~/mypassfile ssh -q sascha@$i rm -rf /tmp/files<br />done</p>
<p>I also spent some time making a temporary keyset for passwordless ssh but that turned out to be no real diff from using sshpass. But messing around with moving it to the servers highlighted another issue - I could only log into about 10 of 100.&nbsp; Lovely.</p>
<p>OMG.&nbsp;  I need an orchestration tool or something, STAT.&nbsp; I should probably go  script this, but I will probably never do anything similar for this client again  unless they ask me to implement an orchestration tool for them.&nbsp;</p>
<p>All of this work, just to get the files to me so I can work work with them. How do people live like this???</p>
<p><strong>****Lesson Learned</strong>: ask more questions when accepting work, even when it&#8217;s ad hoc, tiny project work for someone I know.&nbsp; I assumed they would have management tooling.&nbsp; After all, they were smart enough to use configuration management.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Weekend Chef and Puppet Projects]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/04/01/weekend-chef-and-puppet-projects/"/>
    <updated>2012-04-01T00:00:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/04/01/weekend-chef-and-puppet-projects</id>
    <content type="html"><![CDATA[<p>I have a few clients that I keep in touch with and take on small projects from time to time.&nbsp; This has been a strange week.&nbsp; I&rsquo;m technically full time on a project at the moment and I haven&rsquo;t gotten any calls for new work in a couple of months.&nbsp; It&rsquo;s been quiet.&nbsp; Then all of the sudden Wednesday I had 3 different people contact me about work.&nbsp;</p>
<p><br />One call was actually for some awesome Chef work at a place I&rsquo;ve been before that I&rsquo;d love to go back to.&nbsp; It really pained me to tell them that I thought they had in-house resources of which they weren&rsquo;t aware and that these resources would be more than sufficient to Chef their project without my help. Sadface Sascha.</p>
<p><br />Another call was from someone I do work for from time to time.&nbsp; Their projects source my &ldquo;Puppet for Chef&rdquo; series, if 2 blog posts can be called a series.&nbsp; In my head I have a 3rd one on templates but haven&rsquo;t gotten around to it yet. This 3wk run may source some if I&rsquo;m lucky. I agreed to do some ad hoc sysadmin work for these guys because they&rsquo;re in a swivet, getting ready for a PCI audit in 3 weeks.</p>
<p>The job: There are about 150 Centos 5 servers. Caveat: some of the servers on the list may be retired already.&nbsp; Examine all of the configuration files for ConfigServer Firewall, bring them under Puppet control. Individual node config sets are ok (ugh).&nbsp; All servers are running a puppet client.&nbsp; I don&rsquo;t know if it&rsquo;s the same client.&nbsp; The master was at 2.7.9 last I checked, I think.<p />I have a mini Chef project too for the weekend, but I think I&rsquo;ll save that for another blog post.&nbsp; I actually wrote post of this post on Saturday morning and am just finishing it up. I haven&rsquo;t actually started my Puppet stuff except to wonder if they have some command line tools and think I&rsquo;d better get to writing some tcp testers and comparison scripts if there isn&rsquo;t such a thing.</p>
<p><br />I actually spent a chunk of time working on my Chef thing which was an exercise in frustration.&nbsp; It&rsquo;s for a Windows Ohai plugin and the actual ruby work was a piece of cake. Testing has made me crazy though.&nbsp; Windows servers don&rsquo;t fire up as fast as Linux for one and they are a huge pain in the ass to interact with.&nbsp; On my todo list is an SSH server for Windows cookbook, unless my ultimate wish of hoping that all Windows servers DIAF happens prior to that.&nbsp; The ssh cookbook is half done, like so many things.</p>
<p>I also am not sure I understand the testing strategy.&nbsp; I didn&#8217;t write any new code so I shouldn&#8217;t need to author any tests (relief).&nbsp; But it turns out I can&#8217;t seen any windows testing happening in the run, or at least, I think that&#8217;s what&#8217;s not happening.&nbsp; It ran happily on my Mac and then I thought maybe I should run the test on the Windows box too to see if the output was different.&nbsp; It was different.&nbsp; But I think that&#8217;s because there&#8217;s no Windows plugin tests in there?&nbsp; Wondering if I missed them?&nbsp; I was planning to email the chef-dev list tomorrow to see if I can get some love.&nbsp; Unfortunately the time I have to work on pet projects is the weekends and the IRC channels were like graveyards this weekend.<p />But I digress.&nbsp; I also ran manual tests - you know, the kind where you do stuff by hand and watch the output? My Ohai changes tested perfectly sanely on my Windows 7 64bit workstation.&nbsp; They tested insanely on a 2008r2 VMware VM I had available to me.&nbsp; And when I went into ec2 to fire up a neutral 2008r2, I discovered Ohai hangs on gathering ec2 metadata when run from the command line.&nbsp; I have no idea why.&nbsp; I hand-edited the ec2 plugin and the mixin/ec2_metadata to try and eke out some debug info but I got no joy.&nbsp; While the problem fascinated me, that was as far down that yak shave as I wanted to go today.&nbsp; So I put away the Chef and cleaned up the yard for 2 hours.</p>
<p>Now I guess it&#8217;s time to play with Puppet!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Annoying Recruiter Call #45]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/03/26/annoying-recruiter-call-45/"/>
    <updated>2012-03-26T00:00:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/03/26/annoying-recruiter-call-45</id>
    <content type="html"><![CDATA[<p><img src="http://fuuu.us/362.png" alt="" /></p>
<p>&nbsp;</p>
<p>I enjoy independent consulting.&nbsp; For that matter, I enjoyed consulting for a consulting company.&nbsp; I&rsquo;ve been doing it in one form or another since 2006.&nbsp; I love the variety and the challenge that comes from never knowing wtf will be thrown at me on any given day or project.&nbsp; Some days it&rsquo;s terrifying and some days I want to slap people around, but I won&rsquo;t deny that I like it.<p />Currently my LinkedIn profile, a business card and a terse web site are all I use for self-promotion. I never lack for work. I get calls every week from larger businesses looking to recruit for FTEs.&nbsp; This is rarely something I&rsquo;m interested in.&nbsp; I dislike the inevitable silo and I&rsquo;m not able to engage in the cognitive dissonance required to believe in all the meaningless BS that is part of corporate baggage.&nbsp; So I politely tell all these recruiters that, while I appreciate the contact, I&rsquo;m not looking for full time work at this time.<p />Once in a while I get contacted by recruiters looking to hire for smaller startups.&nbsp; I always listen to the pitch for these because, if the right small company comes along, I&#8217;d probably go work for them.&nbsp; <p />Sometimes they&rsquo;re way off the mark with my skillset or with people who want a culture match - like the recruiter looking to hire someone to work at a social network sports startup.&nbsp; When I told her that, unless it was bicycle racing, I wasn&rsquo;t interested, I could hear the awkward just floating through the phone.&nbsp; Obviously these guys trying to use ESPN APIs and social networking to bring people together would have nothing to say to me.<p />I had a call in December from a recruiter from a brand new startup local to the area, using a tech stack of which I approved.&nbsp; They tried to set me up but it never worked out.&nbsp; The place was all chaos and key people kept going on vacation and one thing after another.&nbsp; Eventually I forgot about it.&nbsp; Until I got a call the other day from the same recruiting company.&nbsp; They left me a voice mail, telling me they had a question and would I call.&nbsp; So I did.&nbsp; I called them today.<p />I got on the phone with the recruiter, a new one, and he literally stumbled all over himself for over a minute, trying to spit out a complete sentence.&nbsp; He finally did and I nearly hung up on him.&nbsp; The conversation went something like this:<p /><strong>Him</strong>: &ldquo;ah, um&#8230;so&#8230;you know that company we were trying to&#8230;remember you worked with my boss last year and that company&#8230;.they um, were looking for&#8230;remember we tried to set you up with X company?&rdquo;<br /><strong>Me</strong>: Yes<br /><strong>Him</strong>: Would you happen to&#8230;.they&rsquo;re looking for&#8230;it&rsquo;s really hard to find people who are into startup culture&#8230;.um&#8230;.ah&#8230;they&rsquo;re looking for&#8230;.um&#8230;developers&#8230;.and so um&#8230;I was wondering&#8230;.if, um<br /><strong>Me</strong>: I don&rsquo;t know any developers looking for work<br /><strong>Him</strong>: Oh, um&#8230;right, well, if you happen to think of anyone&#8230;could I um&#8230;send you a followup email&#8230;just in um case?<br /><strong>Me</strong>: sure &lt;click&gt;<p />Then I sent an email to his manager, the very nice, polite and professional person I&rsquo;d been talking to in December:<p />&ldquo;Hi Harry, I would appreciate it if you could let your colleagues know not to call me for the sole purpose of asking if I know anyone looking for work.&nbsp; It would probably also help their delivery if they not preface their requests with &#8220;remember the job last year we were trying to get for you but couldn&#8217;t?&#8221; and follow up with &#8220;do you know anyone else who might like to work there?&#8221;<p />Thanks,<br />Sascha</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I am not a fangirl]]></title>
    <link href="http://blog.brattyredhead.com/blog/2012/03/23/i-am-not-a-fangirl/"/>
    <updated>2012-03-23T00:00:00-05:00</updated>
    <id>http://blog.brattyredhead.com/blog/2012/03/23/i-am-not-a-fangirl</id>
    <content type="html"><![CDATA[<p><span style="font-size: medium;"><strong>[[posterous-content:tDmkxmhdJkvcIbHmytmJ]]In the beginning, there was no Apple&#8230;</strong></span><br />I have an uneven history of geekiness.&nbsp; Most of my geek comes from my dad.&nbsp; When I was little, sometimes my parents would let me sit up late on the weekends and play Dungeons and Dragons with them and their friends.&nbsp; My dad was a bona fide war gamer.&nbsp; He even played them by mail, with maps hanging up on the wall, using sticky putty to hang counters on them.&nbsp; We didn&rsquo;t have a lot of money, but I remember pong and the first computer I played on was a TRS80.&nbsp; I played Zork, a little.&nbsp; My dad took me to wargame conventions sometimes. There were no apple products in the house.</p>
<p><span style="font-size: medium;"><strong>Still no Apple&#8230;</strong></span><br /> Left to my own devices, I was mostly just a bookworm and music junkie.&nbsp; I knew computers because they were always around at home, but I never programmed for fun.&nbsp; I made money in college tutoring computer subjects and took a few &ldquo;computer classes,&rdquo; because that was the only way to get an email address at my tiny college.&nbsp; But I didn&rsquo;t take them seriously.&nbsp; I was a Medieval Lit major and only interested in computers for email, browsing and word processing. I used a unix terminal long before I mastered DOS or even saw an apple up close.<p /><span style="font-size: medium;"><strong>Who the hell is Apple? </strong></span><br />As an undergrad I took a job doing tech support because it beat the hell out of working in the library, both fun-wise and money-wise.&nbsp; Seriously, ever mended a book binding or filed the catalog cards that come with new books?&nbsp; Helping the clueless figure things out won for me every time and tech support usually means Microsoft systems.&nbsp; So still no apple.</p>
<p><span style="font-size: medium;"><strong>Isn&rsquo;t Apple going to die a horrible corporate death?</strong></span><br />What I&rsquo;m trying to say is, I never even saw a Commodore or an Apple PC until I was an adult.&nbsp; I never had any reason for interest in Apple products.&nbsp; For years to me they were just a company about to go broke.&nbsp; All my experience was Microsoft-based.&nbsp; Then the internet boom happened and I left the Lit studies behind.&nbsp;</p>
<p><span style="font-size: medium;"><strong>Oh look, an iP&#8230;. </strong></span><br />I never wanted a Mac. I eventually bought a 4th gen iPod and really liked it. I&#8217;d never really clicked with any mobile music devices.&nbsp; But I loved the iPod and used it extensively for running.<p />I was skeptical about smartphones and I didn&rsquo;t buy one at all until the iPhone 3GS. At first I didn&#8217;t care for it as I was used to my Blackberry that I had for work.&nbsp; The transition from keyboard to touchscreen was rough.&nbsp; I still don&#8217;t care for chat clients that much although I&#8217;m a proficient typist now. It really grew on me and I eventually became quite attached to it. <p />When the 3GS caught a dunking last year, I picked up the iPhone 4 and only gave that up because ATT didn&rsquo;t work at all in my urban Minneapolis neighborhood.&nbsp; Since I needed a new phone and service, I took the opportunity to test drive an Android phone and, while it has a few good things, I&rsquo;ll gladly give it up for an iPhone5.&nbsp; iOS 5 brought the pulldown notifications which I looooved on the android.&nbsp; And while the phone still doesn&#8217;t have a blinky light, I&#8217;m so attached to my social software these days that I almost don&#8217;t need one any more.&nbsp; That may not be a good thing&#8230;.<p />Something I&#8217;ve never been able to get used to on my android are the keyboards.&nbsp; They do a few cool things I wish for on iOS(holding down the key for the shift character), but in general I mistype on them constantly and it never seems to figure out the trends.&nbsp; I always feel like iOS is reading my mind when I type.<p /><span style="font-size: medium;"><strong>Me likely teh Shuffle&#8230;.</strong></span><br /> Eventually, I discovered the Shuffle, when it first came in the small square.&nbsp; I&#8217;ve gone through 3 of them as I firmly believe they are the best music player for running ever invented.&nbsp; Apple got this so right.&nbsp; It&rsquo;s tiny, clips on to my sports bra strap and has an easy-to-identify pause button and fast forward button.&nbsp; It shuffles my playlist too. This is all I want in a running player.&nbsp; Anything else complicates tactile navigation.&nbsp; I skipped the funny rectangle shuffle - it made things complicated.<p />It&#8217;s a little irritating that it costs so much for the memory it come with, but it really approaches perfection for me.&nbsp; So I pay for it.<p /><span style="font-size: medium;"><strong>Still, who needed a Mac?&nbsp; Not I.</strong></span><br /> Despite all of this, I never wanted a Mac.&nbsp; Among other things, I had some experience with linux touchpad drivers and some older Mac touchpad drivers and they made me want to headdesk myself bloody.&nbsp; I had years of Windows experience. I knew how to fix it and I understood its quirks.&nbsp; I liked it.&nbsp; There was no Mac software for certain things I love (hello Quicken) and they aren&#8217;t really made for games.&nbsp; And their single mouse buttons gave me the creeps.&nbsp; Little did I know&#8230;</p>
<p>I always thought of Macs the way I do Volkswagen: Nice, but overpriced for what you&rsquo;re getting.&nbsp; I&rsquo;ve always liked a high screen resolution on my laptops and Macs could never give me that.&nbsp; My 11&rdquo; Sony had a 1366x800 screen resolution which I loved.&nbsp; My 13&rdquo; had 1600x1024 (or something like that).&nbsp; It was awesome and lightweight to boot.&nbsp; I could even snag a unix-like command line with Cygwin. It did everything I needed it to do.</p>
<p><span style="font-size: medium;"><strong>Until I started programming&#8230;.</strong></span><br /> 2 years ago, when I started in on Chef and Ruby, needing Rubygems and all the other disparate parts that come with managing laptop development environments, it all fell apart.&nbsp; I&rsquo;ve heard rumors that it&rsquo;s possible to get ruby environments running with Cygwin.&nbsp; As a matter of fact, I know you can because a couple of the Thoughtworks consultants forced to use client-supplied Windows laptops made it work.&nbsp; But it was painful.&nbsp; And I wanted no part of it.&nbsp;</p>
<p>I ad-hoc&rsquo;d my way through for a while by using a Linux VM.&nbsp; That worked ok, but it wasn&rsquo;t really flexible enough for me.&nbsp; Also, I ran into funky problems like some gems/tools worked on some Linux distros but not others.&nbsp; But one thing almost everything in the ENTIRE WORLD works on is Mac OSX.&nbsp; BECAUSE ALL THE DEVELOPERS ARE USING IT! And so all the Ruby and Python tools in the world work on OSX as well as common Linux distros (read: Ubuntu)</p>
<p>I eventually discovered that I really wanted a Mac because I was so tired of devoting countless cycles to shoe-horning (yak shaving) things into a workable state on my windows laptop when I knew it would all just work on a Mac.&nbsp; So I waited for the new Macbook Air to surface last July and grabbed one.&nbsp; I&rsquo;ve had it for 8 months and am pretty used to it now.&nbsp; It doesn&rsquo;t have the screen real estate that my last 13&rdquo; had, but I&rsquo;ve come to really love the touchpad and gestures.&nbsp; I also love hot key empowerment and being able to type at a comfortable command line.&nbsp; I love that, when I don&rsquo;t know wtf the OS is doing, I can drop to a command line and figure it out.&nbsp; I love that OSX comes with awesome built in tools like iPhoto and the VPN client.</p>
<p>I still have days when I&rsquo;m all key smashy omgwtf-fu mac, but they are rare.</p>
<p><span style="font-size: medium;"><strong>And then there was iPad&#8230;. </strong></span><br />I&rsquo;ve never felt the need for a tablet.&nbsp; I&rsquo;m not on the road that much these days.&nbsp; My laptop is fairly mobile.&nbsp; I have tiny hands. No seriously, I shop for winter gloves in the boys section because all the women&rsquo;s size small gloves are TOO BIG.&nbsp; WTF are my tiny hands going to do with a tablet?&nbsp;</p>
<p>It turns out, strain to reach the letters in the middle of the keyboard.</p>
<p>My recent experiences with different phones made me think I could ready for a tablet.&nbsp; I&rsquo;d canceled my iPhone contract and was going to sell it.&nbsp; But I found myself continuing to read on the iPhone and use it for things at home via wifi.&nbsp; I read a lot at night in bed in the dark. The new Samsung was too bright even with the brightness all the way down and the battery needed to be saved for when I actually needed to use the phone. I eventually got a light filter app whose sole duty is to dim the backlight even more.</p>
<p>5 months later, I&rsquo;m still using the iPhone.&nbsp; I figured I might find some use for a tablet and maybe sell the iPhone.&nbsp; Plus, I love the iPhone keyboards and the way iOS seems to read my mind when it&rsquo;s autocorrecting (most of the time).&nbsp; I&rsquo;ve never connected well with the Android keyboards, even with auxiliary apps like SwiftKey.</p>
<p>I now have a new iPad.&nbsp; It&rsquo;s really big.&nbsp; I can&rsquo;t really reach the letters in the center of the keyboard with my thumbs although it&rsquo;s nice to type on when flat.&nbsp; It&rsquo;s also really slippery and hard to use in bed.&nbsp; My case will come tomorrow.&nbsp; This will hopefully keep it from sliding out of my hands and give me some texture to hang on to.<p />I like that Tweetdeck will sync across all my devices.&nbsp; I like that I can now read PDFs without pain on a mobile device.&nbsp; I don&#8217;t like that everyone seems to think that Retina means everything should stay the same size and look nicer.&nbsp; I want smaller stuff.&nbsp; SHRINK ALL THE THINGS APPLE!<p />The iPad is not yet earning its keep.&nbsp; I&#8217;m on the extended work from home plan so it&#8217;s doing light duty at the moment.&nbsp; I am reserving judgement; although it&#8217;s possible that, if you buy the rumored 7 inch iPad later this year, I might trade you.<p /><span style="font-size: medium;"><strong>And the paraphernalia&#8230;</strong></span><br />I picked up a stand for my Macbook and a bluetooth keyboard.&nbsp; And then the Airport Express.&nbsp; I researched wireless print servers and couldn&#8217;t find a decent one for much less than the Airport.&nbsp; And the Airport will stream my iTunes too. <p /><span style="font-size: medium;"><strong>And the iTunes..</strong>.</span><br />Yeah I forgot to mention iTunes.&nbsp; I&#8217;ve been using it for years, even though it sucked up massive resources on my Windows boxes.&nbsp; It&#8217;s the easiest, most intuitive music manager I&#8217;ve ever met.&nbsp; And it manages my i-devices.&nbsp; I asked Android owners before I bought my phone, &#8220;how do you manage your phone?&#8221; They just looked at me like I was crazy.&nbsp; I still can&rsquo;t figure out if I&rsquo;ve been conditioned by Apple, but I really like having the iTunes interface to manage my phone, etc.<p /><span style="font-size: medium;"><strong>and then there was the iTunes Store&#8230;</strong></span><br />I loathe the iTunes store.&nbsp; There&rsquo;s no way to filter searches.&nbsp; There&rsquo;s no way to make it show you what you want.&nbsp; You get only what it wants you to see.&nbsp; <p /><span style="font-size: medium;"><strong>So I don&rsquo;t know, am I a fangirl?&nbsp; </strong></span><br />I&#8217;ve always thought Apple owners came across rather smug. But then I kind of fell down the slippery slope of Apple product ownership.&nbsp; I don&#8217;t feel smug.</p>
<p>I still won&rsquo;t buy iTunes content except for a few things here and there.&nbsp; I won&rsquo;t buy the Apple TV.&nbsp; I have a Roku that streams everything I need and for less money.&nbsp; <p />I don&rsquo;t care to be locked into one content provider, which is why I refused to buy a Kindle.&nbsp; Also, I love me my backlight.&nbsp; Ironically I like a smartphone/tablet for reading because it allows me to have apps for all content providers.&nbsp; In general I tend to use Amazon, but I refuse to be required to use them through the mishap of buying one of their devices.&nbsp; If Apple ever started restricting other content provider apps, I would have to take a serious look at my hardware collection.<p />I still have a Windows desktop.&nbsp; My Quicken is there.&nbsp; My (tiny) gaming collection is there.&nbsp; Calibre is there.&nbsp; Other large footprint software is there.&nbsp; I haven&rsquo;t rid myself of my 13&rdquo; Sony yet although I only open it when I need to look for something.&nbsp; It&rsquo;s my only mobile HDMI-out device at the moment.&nbsp; Apple devices don&rsquo;t play Flash and that&rsquo;s what Amazon is streaming in at the moment.<p />I&rsquo;m a big fan of their hardware.&nbsp; I love all my Apple stuff.&nbsp; But I&rsquo;m still comfortable with Windows and have nothing against it as a user (although Windows Server Administration makes me want to cut off my fingers).&nbsp; I wouldn&rsquo;t urge someone else to get an Apple device.&nbsp; I might or might not gush about it, depending on what it was.&nbsp; I kind of wish Apple had designed my treadmill. But then, I probably couldn&rsquo;t have afforded it.<p />To an outsider, I probably look like a fangirl. But if another company made something as awesome to use as an Apple product, I&rsquo;m sure I&rsquo;d buy it.&nbsp; My foray into that arena though was my Samsung Galaxy S2 which has just not been as lovable as I&rsquo;d hoped.<p />I&rsquo;ve been all &ldquo;I don&rsquo;t need Apple stuff&rdquo; my whole life. But I kinda like it, it&rsquo;s reliable and it&rsquo;s all so very comfortable to use.&nbsp; So while I may not gush, I might be a bit of a closet fangirl.&nbsp; It&rsquo;s possible&#8230;.<p /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Puppet for Chef Users - Part 2 - When is a node a node? ]]></title>
    <link href="http://blog.brattyredhead.com/blog/2011/11/19/puppet-for-chef-users-part-2-when-is-a-node-a/"/>
    <updated>2011-11-19T00:00:00-06:00</updated>
    <id>http://blog.brattyredhead.com/blog/2011/11/19/puppet-for-chef-users-part-2-when-is-a-node-a</id>
    <content type="html"><![CDATA[<p><em>Disclaimer: I have been working with Chef for about 18 months and Puppet for about 5 minutes.&nbsp; I don&#8217;t claim to be an expert on Puppet nor warranty this information in any way.&nbsp; It could all be egregiously wrong.&nbsp; This is simply a blog exploring what I&#8217;m learning.</em><p />When is a node a node?&nbsp; And when is it a thought?&nbsp; Or a regex? When is it a description of a certain state of being?<p />When I first started working in someone else&#8217;s existing puppet domain, I was confused.&nbsp; Everything was described in puppet/manifests/site.pp.&nbsp; There was a lot of description.&nbsp; Everything was called a node, regardless of what kind of object it was describing. Lists of manifests/classes were nodes, named servers were nodes, there were some regexs also designated nodes.&nbsp; I was confused.<p />Check it out.&nbsp; In Chef there are nodes.&nbsp; A node is always the endpoint in question.&nbsp; It&#8217;s a concrete item.&nbsp; It just&#8230;.is.&nbsp; A VM is a node.&nbsp; An AWS instance is a node.&nbsp; If you want to describe a node, you add recipes or roles to it.&nbsp; A recipe is a single thing.&nbsp; A role is a collection of recipes, attributes and information that comprises a functional entity.<p />In Puppet, a node is a much more nebulous concept.&nbsp; A node is still always the client endpoint.&nbsp; But, the node can also be a described end state.<p />Let&#8217;s use the ubiquitous webserver example.&nbsp; In my webserver, I will probably need a set of base OS modules/cookbooks and some webserver stuff.&nbsp; I might have a requirement set that looks like this:<p />[ dns, ntp, ssh, syslog, puppet-agent|chef-client, apache, openssl, memcached ]<p />There are some differences in Puppet and Chef management structure.&nbsp; In Chef, a node is a client, an endpoint. It&#8217;s pretty much always a server, whether hardware, VM or cloud instance.<p />In Chef I would write cookbooks for each of the items in my set.&nbsp; Then I would probably create two roles: dotcom_base and webserver<p /><strong>roles/com_base.rb</strong><br /><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</strong><br />name &#8220;dotcom_base&#8221;<br />description &#8220;The base role for ALL systems&#8221;<br />run_list(<br />&nbsp;&nbsp;&nbsp; &#8220;recipe[chef-client]&#8221;,<br />&nbsp;&nbsp;&nbsp; &#8220;recipe[syslog]&#8221;, &nbsp;<br />&nbsp;&nbsp;&nbsp; &#8220;recipe[ssh]&#8221;,<br />&nbsp;&nbsp;&nbsp; &#8220;recipe[ntp]&#8221;,<br />&nbsp;&nbsp;&nbsp; &#8220;recipe[dns]&#8221;<br />)<p /><strong>roles/webserver.rb</strong><br /><strong>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</strong><br />name &#8220;webserver&#8221;<br />description &#8220;Role for Webservers&#8221;<br />run_list(<br />&nbsp;&nbsp;&nbsp; &#8220;recipe[apache]&#8221;,<br />&nbsp;&nbsp;&nbsp; &#8220;recipe[openssl]&#8221;, &nbsp;<br />&nbsp;&nbsp;&nbsp; &#8220;recipe[memcached]&#8221;<br />)<p />At this point I would then add both roles to any webserver node in my farm.&nbsp; Or the roles would be added at bootstrap or your choice.&nbsp; This information goes into node attributes stored in the attribute database.&nbsp; There is no flat file representation of actual named nodes.<p />Puppet is all flat file management, requiring node management to be described in flat files.&nbsp; Puppet has also chosen a flexible concept of <strong>node</strong>.<p /> A node can be a collection of similar items:  <br /><strong>node &#8220;dotcom_base&#8221;</strong> { <br /> &nbsp; include dns<br />&nbsp; include ntp<br />&nbsp; include syslog<br />&nbsp; include puppet_agent<br />}<p />A node can be a type:<br /><strong>node &#8220;webserver&#8221;</strong>&nbsp; inherits &#8220;dotcom_base&#8221; {<br />&nbsp; include apache<br />&nbsp; include openssl<br />&nbsp; include memcached<br />&nbsp;}<p />Given dotcom_web1.domain.com, dotcom_web2.domain.com, dotcom_web3.domain.com:<p />A node can just be a single endpoint:<br /><strong>node dotcom_web1.domain.com </strong>inherits &#8220;webserver&#8221;{ }<p />A node can be a collection of nodes matched with regex.<br /><strong>node /^dotcom_web\d+&#46;domain&#46;com$/</strong> inherits &#8220;webserver&#8221; { }</p>
<p>A thought on node construction: To be more transparent, these could also say <p /><em>inherits &#8220;dotcom_base&#8221; { webserver }</em><p />While I have not seen this notation, it&#8217;s what I would do if I were designing from the bottom up.&nbsp; This may or may not be correct style-wise, but I&#8217;m a fan of transparency in my config statements.</p>
<p>Puppet node information can either be described in the top level puppet/manifests/site.pp or site.pp can include a second file traditionally called nodes.pp.&nbsp; Site.pp can also include puppet conditionals, environment descriptions and params that might be specific to an environment, similar to Chef&#8217;s override attributes.</p>
<p>So, to recap, Chef and Puppet both have nodes.&nbsp; Puppet describes many different objects which are all designated nodes.&nbsp; Chef has chosen to break out object descriptions into roles and runlists for nodes.</p>
<p><strong>Chef progression: </strong>cookbook/recipe=&gt; role =&gt; node <br /><strong>Puppet progression: </strong>module/manifest =&gt; typed node description =&gt; specific/regex matched node description</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Puppet for Chef Users]]></title>
    <link href="http://blog.brattyredhead.com/blog/2011/11/07/puppet-for-chef-users/"/>
    <updated>2011-11-07T00:00:00-06:00</updated>
    <id>http://blog.brattyredhead.com/blog/2011/11/07/puppet-for-chef-users</id>
    <content type="html"><![CDATA[<p>I picked up a Puppet gig recently.&nbsp; The client already has an OS level Puppet install working.&nbsp; My job is to use my understanding of automation tooling to configure an app stack.&nbsp; I was pretty cocky.&nbsp; I thought, well, I really know Chef after over a year working with it and extending it at another client, how hard can Puppet be?&nbsp;</p>
<p>It&#8217;s not hard really.&nbsp; But it&#8217;s not cooperative either.&nbsp; They look really similar, Puppet and Chef, but I&#8217;m finding it hard to get Puppet to do what I want.&nbsp; First, I need to figure out what I want to do.&nbsp; Then I automatically consider how I would do it in chef.&nbsp; Then I have to figure out how to do it in Puppet.&nbsp; This is harder than it sounds as a direct translation of something is not always the most useful, graceful or appropriate method.</p>
<p>I keep wishing I could find an article or manual on the Interwebs called something like &#8220;Puppet for Chef Users,&#8221; where it would translate all the things done in Chef to what they do in Puppet.&nbsp; I haven&#8217;t found it.&nbsp; And I don&#8217;t have all the answers.&nbsp; As you can see here, I actually have very few answers.&nbsp; None really.&nbsp; But I&#8217;m eking out answers as I go.</p>
<p>Example: I want to set a node attribute.&nbsp;</p>
<p>Well, hm.&nbsp; Ok.&nbsp; A node is still a node(mostly) in Puppet.&nbsp; Puppet has Facter instead of Ohai.&nbsp; Right, I knew that.&nbsp; So, then I have to address the philosophical question, is that the correct way to do what I want?&nbsp; Do I add things like myapp_home, java_install_dir to Facter?&nbsp; Yah, I think I do.&nbsp; I want stuff outside the myapp module to know where the myapp log dir is, maybe (it could happen).</p>
<p>Let&#8217;s say I do want to add custom facts.&nbsp; That&#8217;s just like node attributes aren&#8217;t they?&nbsp; I&#8217;m still not positive, but I&#8217;ve got to make a decision and start coding something.&nbsp; I can always revise if I&#8217;m wrong.</p>
<p>Alright, where&#8217;s the attributes file?&nbsp; Whoops!&nbsp; No attribute file.&nbsp; I <a href="http://forge.puppetlabs.com/tags/webserversdownloaded" target="_blank">downloaded a sample Apache module from puppet labs </a>in order to have an example to work with.&nbsp; I needed the example to be complex enough to have custom attributes but not so complicated I couldn&#8217;t read it.&nbsp; I figured an Apache server was a good compromise.&nbsp;</p>
<p>I found that Puppet modules can define new facts in the lib directory of the module.&nbsp; Strangely, at first I thought it was defined in a directory called &#8216;plugins&#8217; as I first noticed the new facts defined there.&nbsp; But as I read the <a href="http://docs.puppetlabs.com/guides/plugins_in_modules.html" target="_blank">documentation on defining new facts</a>, I realized that was the old directory. The new way dictates that all custom code goes in modules/myapp/lib.&nbsp;</p>
<p>The directory storing new facts has small rb files with code similar to ohai snippets.&nbsp; This seemed like more coding than I needed, but I&#8217;m still not sure how to just set an attribute without writing a code snippet.&nbsp; Here&#8217;s the code example I found:</p>
<p>require &#8216;facter&#8217;<br />Facter.add(:gem_passenger_version) do<br />&nbsp;&nbsp;&nbsp; setcode do %x{rpmquery &#8211;qf=&#8217;%{VERSION}&#8217; rubygem-passenger} end<br />end</p>
<p>here&#8217;s my experimental code:</p>
<p>require &#8216;facter&#8217;<br />myapp_facts={&#8220;myapp_home&#8221; =&gt; &#8220;/opt/myapp&#8221;, &#8220;myapp_server_dir&#8221; =&gt; &#8220;/opt/myapp/server&#8221;,&#8221;myapp_log_dir&#8221; =&gt; &#8220;/var/log/myapp&#8221;}<p />myapp_facts.each do |k,v|<br />&nbsp; Facter.add(k) do<br />&nbsp;&nbsp;&nbsp; setcode do { k=v } end<br />&nbsp; end<br />end</p>
<p>This is what came out of testing:</p>
<p>[root@pixel rubylib]#&nbsp; RUBYLIB=. facter|grep myapp<br />myapp_home =&gt; /opt/myapp<br />myapp_log_dir =&gt; /var/log/myapp<br />myapp_server_dir =&gt; /opt/myapp/server</p>
<p>So yay!&nbsp; I figured it out. I added my puppet equivalent of node attributes.&nbsp; Kind of.&nbsp; As far as I can tell, Facter is not hierarchical a la Ohai, so my node attributes are flattened instead of in a hierarchy.</p>
<p>To recap, in Chef/In Puppet:</p>
<ul>
<li>Ohai/Facter</li>
<li>node attributes/facts</li>
<li>ohai is hierarchical json: facter is flat key =&gt; value pairs</li>
<li>chef node attributes are defined in myapp/attributes/attribute.rb/Puppet facts are defined in myapp/lib/facts&nbsp;</li>
</ul>
<p>Coming soon, my adventures with Hiera and data storage, also Puppet ruby DSL vs Puppet Puppet DSL.</p>
]]></content>
  </entry>
  
</feed>
